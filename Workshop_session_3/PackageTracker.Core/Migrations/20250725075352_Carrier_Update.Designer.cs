// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PackageTracker.Core.Data;

#nullable disable

namespace PackageTracker.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250725075352_Carrier_Update")]
    partial class Carrier_Update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PackagePackageStatus", b =>
                {
                    b.Property<int>("PackagesId")
                        .HasColumnType("int");

                    b.Property<int>("packageStatusId")
                        .HasColumnType("int");

                    b.HasKey("PackagesId", "packageStatusId");

                    b.HasIndex("packageStatusId");

                    b.ToTable("PackagePackageStatus");
                });

            modelBuilder.Entity("PackageStatusPackageStatusHistory", b =>
                {
                    b.Property<int>("PackageStatusHistoriesId")
                        .HasColumnType("int");

                    b.Property<int>("packageStatusesId")
                        .HasColumnType("int");

                    b.HasKey("PackageStatusHistoriesId", "packageStatusesId");

                    b.HasIndex("packageStatusesId");

                    b.ToTable("PackageStatusPackageStatusHistory");
                });

            modelBuilder.Entity("PackageTracker.Core.Entities.Carrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("carriers");
                });

            modelBuilder.Entity("PackageTracker.Core.Entities.CarrierService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("carrierServices");
                });

            modelBuilder.Entity("PackageTracker.Core.Entities.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarrierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Height")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("Length")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("PackageStatusHistoryId")
                        .HasColumnType("int");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Weight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("Width")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CarrierId");

                    b.HasIndex("PackageStatusHistoryId");

                    b.HasIndex("UserId");

                    b.ToTable("packages");
                });

            modelBuilder.Entity("PackageTracker.Core.Entities.PackageStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PackageStatuses");
                });

            modelBuilder.Entity("PackageTracker.Core.Entities.PackageStatusHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PackageStatusHistories");
                });

            modelBuilder.Entity("PackageTracker.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PackagePackageStatus", b =>
                {
                    b.HasOne("PackageTracker.Core.Entities.Package", null)
                        .WithMany()
                        .HasForeignKey("PackagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PackageTracker.Core.Entities.PackageStatus", null)
                        .WithMany()
                        .HasForeignKey("packageStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PackageStatusPackageStatusHistory", b =>
                {
                    b.HasOne("PackageTracker.Core.Entities.PackageStatusHistory", null)
                        .WithMany()
                        .HasForeignKey("PackageStatusHistoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PackageTracker.Core.Entities.PackageStatus", null)
                        .WithMany()
                        .HasForeignKey("packageStatusesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PackageTracker.Core.Entities.Package", b =>
                {
                    b.HasOne("PackageTracker.Core.Entities.Carrier", null)
                        .WithMany("Packages")
                        .HasForeignKey("CarrierId");

                    b.HasOne("PackageTracker.Core.Entities.PackageStatusHistory", null)
                        .WithMany("Packages")
                        .HasForeignKey("PackageStatusHistoryId");

                    b.HasOne("PackageTracker.Core.Entities.User", null)
                        .WithMany("Packages")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PackageTracker.Core.Entities.Carrier", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("PackageTracker.Core.Entities.PackageStatusHistory", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("PackageTracker.Core.Entities.User", b =>
                {
                    b.Navigation("Packages");
                });
#pragma warning restore 612, 618
        }
    }
}
